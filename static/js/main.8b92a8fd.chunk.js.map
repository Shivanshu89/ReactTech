{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","Cardlist","robots","cardComponent","map","user","i","username","Scroll","props","style","overflowY","border","height","children","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","CardList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2CCQCQ,EAbH,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAExB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAMC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WAC1D,gCACI,6BAAKL,IACL,4BAAIC,WCYLK,EAlBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OACA,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdU,SAAUL,EAAOI,GAAGC,SACpBZ,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAJZU,MAQb,OACI,8BACKH,KCREK,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,QAAlE,SACKJ,EAAMK,YCWJC,EAdG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAChB,OACI,qBAAKlB,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVmB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCWPI,E,kDAjBX,WAAYX,GAAO,IAAD,8BACd,cAAMA,IACDY,MAAQ,CACTC,UAAS,GAHC,E,qDAMlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKhB,MAAMK,a,GAdCa,aC8CZC,E,kDAzCX,aAAc,IAAD,8BACT,gBAYHC,eAAiB,SAACC,GAEf,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACTnB,OAAO,GACP6B,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACL9C,MAAK,SAAA+C,GAAQ,OAAEA,EAASC,UACxBhD,MAAK,SAAAiD,GAAK,OAAI,EAAKX,SAAS,CAACxB,OAAOmC,S,oBAOzC,WACQ,MAA8BZ,KAAKJ,MAA5BnB,EAAP,EAAOA,OAAQ6B,EAAf,EAAeA,YAETO,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,oBAAoBC,SAASX,EAAYU,wBAE/D,OAAQvC,EAAOyC,OAGX,sBAAK7C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWkB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAACe,EAAD,CAAU1C,OAAQoC,WAPlC,+C,GA1BMX,a,MCClBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.8b92a8fd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card =({ name, email, id}) =>{\n    //const { name, email, id} = props;\n    return(\n        <div className='tc ma2 bg-light-green dib br3 pa2 grow bw2 shadow-5'>\n            <img  src={`https://robohash.org/${id}?size=200x200`} alt='robots'/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card';\n\nconst Cardlist = ({robots})=>{\n    const cardComponent = robots.map((user, i)=>{\n        return (\n        <Card \n            key={i} \n            id={robots[i].id} \n            username={robots[i].username} \n            name={robots[i].name} \n            email={robots[i].email}\n            />\n        );\n    })\n    return(\n        <div>\n            {cardComponent}\n        </div>\n    );\n}\nexport default Cardlist","import React from 'react';\n\nconst Scroll = (props)=>{\n    return (\n        <div style={{overflowY:'scroll', border:'5px solid black', height:'90vh'}}>\n            {props.children}\n        </div>\n    );\n}\nexport default Scroll;","import React from 'react';\n\nconst SearchBox = ({searchChange})=>{\n    return(\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='search robots'\n            onChange={searchChange}\n            />\n        </div>\n        \n    )\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError:false\n        }\n    }\n    componentDidCatch(error, info){\n        this.setState({hasError:true})\n    }\n    render(){\n        if(this.state.hasError){\n            return <h1>Ooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundry from '../components/ErrorBoundry'\n\nclass App extends Component{\n    constructor(){\n        super();\n        this.state = {\n            robots:[],\n            searchfield:''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=>response.json())\n        .then(users => this.setState({robots:users}));\n    }\n     onSearchChange = (event) =>{\n         \n        this.setState({ searchfield: event.target.value})\n    }\n\n    render(){\n            const {robots, searchfield} = this.state;\n            \n            const filteredRobots = robots.filter(robot => {\n                return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\n            });\n            return !robots.length ? \n            <h1>Loading..</h1> :\n            (\n                <div className='tc'> \n                    <h1>Robofriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                    \n                </div>\n            )\n        }\n    \n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}